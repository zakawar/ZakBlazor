<div class="modal fade" data-backdrop="static" data-keyboard="false" id="deleteConfirmationModal" tabindex="-1" role="dialog">

    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="close" @onclick="()=>OnconfirmationDelete(false)" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete
            </div>
            @if (isProcessing)
            {
                <div class="modal-footer">
                    <button type="button" disabled class="btn btn-secondary" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" disabled class="btn btn-danger">
                        Processing...
                    </button>
                </div>
            }
            else
            {

                <div class="modal-footer">
                    <button type="button" @onclick="()=>OnconfirmationDelete(false)" class="btn btn-secondary" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" @onclick="()=>OnconfirmationDelete(true)" class="btn btn-danger">
                        Delete
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@code {

    [Parameter]
    public bool isProcessing { get; set; }

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    private async Task OnconfirmationDelete(bool value)
    {
        if (value)
        {
            await ConfirmationChanged.InvokeAsync(value);
        }
    }

}