@page "/Product/price/{Id:int}"
@page "/ProductPrice"
@inject IProductRepository _productRepository
@inject IProductPriceRepository _productPriceRepository



<h3 class="card-title text-primary mb-3 ml-3">Product Price Management</h3>

@if (isLoading)
{
    <div class="text-center">
        <img src="/images/loading.gif">
    </div>
}
else
{
    
}
@code {
    [Parameter]
    public int Id { get; set; }
    private ProductDTO product { get; set; } = new();
    private IEnumerable<ProductPriceDTO> productprices { get; set; } = new List<ProductPriceDTO>();
    private bool isLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isLoading = true;
            StateHasChanged();
            product = await _productRepository.Get(Id);
            productprices = await _productPriceRepository.GetAll(Id);
            isLoading = false;
            StateHasChanged();
        }
    }
}
